#!/usr/bin/env node
var fs        = require("fs")
  , path      = require("path")
  , exec      = require('child_process').exec
  , argv      = require('optimist').argv
  , base_path = path.resolve(".", "tests")
  , dirs      = fs.readdirSync(base_path)
  , stack     = []
  , success   = true
  , files
  , test
  ;

// set env vars in a platform agnostic way
(argv.e||[]).forEach(function (env_var) {
  if(env_var.indexOf("=")!==-1) {
    var split = env_var.split("=");
    process.env[split[0]] = split[1];
  }
});

function runTests(tests, previousStatus) {
  if(success) {
    success = previousStatus;
  }
  if(tests[0]) {
    exec("node " + tests[0], ppTest(tests));
  } else {
    return process.exit(success ? 0 : 1);
  }
}

function ppTest (tests) {
  var file_path = tests.shift();
  return function (err, stdout, stderr) {
    console.log(stdout);
    console.log(stderr);
    runTests(tests, !(err || stderr));
  };
}

for(var dir in dirs) {
  var dir_path = path.resolve(base_path, dirs[dir]);
  if(fs.statSync(dir_path).isDirectory()) {
    files = fs.readdirSync(dir_path);
    for (var file in files) {
      var file_path = path.resolve(dir_path, files[file]);
      if(/\.js$|\.node$/.test(file_path)) {
        stack.push(file_path);
      }
    }
  }
}

runTests(stack, true);